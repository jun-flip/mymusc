import React, { useState, useCallback } from 'react';

// –•—É–∫ –¥–ª—è –º–µ–¥–∏–∞-–∑–∞–ø—Ä–æ—Å–∞
function useMediaQuery(query) {
  const [matches, setMatches] = useState(false);
  
  React.useEffect(() => {
    const media = window.matchMedia(query);
    if (media.matches !== matches) setMatches(media.matches);
    const listener = () => setMatches(media.matches);
    media.addEventListener('change', listener);
    return () => media.removeEventListener('change', listener);
  }, [matches, query]);
  
  return matches;
}

function SearchForm({ onSearch, isLoading, searchResults, loadMore, hasMore }) {
  const [query, setQuery] = useState('');
  const [error, setError] = useState('');
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç–∫—Ä–∞–Ω —É–∑–∫–∏–º (–º–µ–Ω—å—à–µ 480px)
  const isNarrowScreen = useMediaQuery('(max-width: 480px)');

  const handleSubmit = useCallback(async (e) => {
    e.preventDefault();
    
    if (!query.trim()) {
      setError('–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å');
      return;
    }

    setError('');
    
    try {
      await onSearch(query.trim());
    } catch (error) {
      console.error('Search error:', error);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      if (error.message?.includes('502') || error.message?.includes('503')) {
        setError('–°–µ—Ä–≤–∏—Å –ø–æ–∏—Å–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø–æ–∏—â–∏—Ç–µ "demo" –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç—Ä–µ–∫–æ–≤.');
      } else if (error.message?.includes('network') || error.message?.includes('fetch')) {
        setError('–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      } else if (error.message?.includes('timeout')) {
        setError('–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
      } else {
        setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      }
    }
  }, [query, onSearch]);

  const handleLoadMore = useCallback(async () => {
    if (!hasMore || isLoading) return;
    
    try {
      await loadMore();
    } catch (error) {
      console.error('Load more error:', error);
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤');
    }
  }, [hasMore, isLoading, loadMore]);

  const handleInputChange = (e) => {
    setQuery(e.target.value);
    if (error) setError(''); // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –≤–≤–æ–¥–µ
  };

  const handleKeyPress = (e) => {
    if (e.key === 'Enter') {
      handleSubmit(e);
    }
  };

  return (
    <div className="search-container">
      <form onSubmit={handleSubmit} className="search-form">
        <div className="search-input-container" style={{
          display: 'flex',
          alignItems: 'center',
          gap: '8px',
          width: '100%'
        }}>
          <input
            type="text"
            value={query}
            onChange={handleInputChange}
            onKeyPress={handleKeyPress}
            placeholder="–ü–æ–∏—Å–∫ —Ç—Ä–µ–∫–æ–≤..."
            className="search-input"
            disabled={isLoading}
            aria-label="–ü–æ–∏—Å–∫ —Ç—Ä–µ–∫–æ–≤"
            style={{
              flex: 1,
              height: '44px',
              padding: '12px 16px',
              fontSize: '16px',
              border: '2px solid #333',
              borderRadius: '8px',
              backgroundColor: '#1a1a1a',
              color: '#fff',
              outline: 'none',
              transition: 'border-color 0.2s ease'
            }}
            onFocus={(e) => {
              e.target.style.borderColor = '#ff5500';
            }}
            onBlur={(e) => {
              e.target.style.borderColor = '#333';
            }}
          />
          <button 
            type="submit" 
            className="search-button"
            disabled={isLoading || !query.trim()}
            aria-label="–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫"
            style={{
              height: '44px',
              minWidth: isNarrowScreen ? '48px' : '80px',
              padding: isNarrowScreen ? '8px' : '8px 16px',
              fontSize: isNarrowScreen ? '18px' : '16px',
              border: '2px solid #ff5500',
              borderRadius: '8px',
              backgroundColor: '#ff5500',
              color: 'white',
              cursor: 'pointer',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              transition: 'all 0.2s ease',
              outline: 'none'
            }}
            onMouseOver={(e) => {
              if (!isLoading && query.trim()) {
                e.target.style.backgroundColor = '#e64a19';
                e.target.style.borderColor = '#e64a19';
              }
            }}
            onMouseOut={(e) => {
              e.target.style.backgroundColor = '#ff5500';
              e.target.style.borderColor = '#ff5500';
            }}
          >
            {isLoading 
              ? (isNarrowScreen ? '‚è≥' : '–ü–æ–∏—Å–∫...') 
              : (isNarrowScreen ? 'üîç' : '–ü–æ–∏—Å–∫')
            }
          </button>
        </div>
      </form>

      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É */}
      {error && (
        <div className="error-message" style={{
          color: '#ff6b6b',
          backgroundColor: 'rgba(255, 107, 107, 0.1)',
          padding: '10px',
          borderRadius: '8px',
          marginTop: '10px',
          fontSize: '14px',
          textAlign: 'center'
        }}>
          {error}
        </div>
      )}

      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
      {isLoading && (
        <div className="loading-indicator" style={{
          textAlign: 'center',
          padding: '20px',
          color: '#666'
        }}>
          <div style={{ fontSize: '24px', marginBottom: '10px' }}>üîç</div>
          <p>–ü–æ–∏—Å–∫ —Ç—Ä–µ–∫–æ–≤...</p>
        </div>
      )}
    </div>
  );
}

export default SearchForm; 